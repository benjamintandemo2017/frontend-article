{"version":3,"sources":["components/ArticleCard.tsx","components/ArticleDeck.tsx","common/articles.tsx","App.tsx","common/Constants.tsx","index.tsx"],"names":["ArticleCard","props","useState","isReadMore","setIsReadMore","Card","className","article","cardClass","Header","date","Body","Title","title","Text","text","substr","Footer","Button","onClick","ArticleDeck","articleCards","this","dataSource","map","item","i","console","log","CardDeck","Component","articles","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAoCeA,EAxBiD,SAACC,GAC7D,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAKA,OACI,eAACC,EAAA,EAAD,CAAMC,UAAWL,EAAMM,QAAQC,UAA/B,UACI,cAACH,EAAA,EAAKI,OAAN,CAAaH,UAAU,kBAAvB,SACI,4BAAIL,EAAMM,QAAQG,SAEtB,eAACL,EAAA,EAAKM,KAAN,CAAWL,UAAU,gBAArB,UACI,cAACD,EAAA,EAAKO,MAAN,UAAaX,EAAMM,QAAQM,QAC3B,cAACR,EAAA,EAAKS,KAAN,CAAWR,UAAU,gBAArB,SACMH,EAAa,+BAAOF,EAAMM,QAAQQ,OAAe,qCAAQd,EAAMM,QAAQQ,KAAKC,OAAO,EAAE,IAAM,cAGrG,cAACX,EAAA,EAAKY,OAAN,UACI,eAACC,EAAA,EAAD,CAAQZ,UAAU,gBAAgBa,QAhBvB,WACnBf,GAAeD,IAeP,UAA8DA,EAA2B,YAAd,YAA3E,a,QCpBKiB,E,4JAEjB,WACI,IACMC,EADaC,KAAKrB,MAAMsB,WACEC,KAAI,SAACC,EAAMC,GAAP,OAChC,cAAC,EAAD,CAAqBnB,QAASkB,GAAZC,MAGtB,OADAC,QAAQC,IAAIP,GAER,8BACI,cAACQ,EAAA,EAAD,CAAUvB,UAAU,gBAApB,SACKe,U,GAXoBS,aCH5BC,EAAW,CACpB,CACIrB,KAAM,eACNG,MAAO,qDACPE,KAAM,qHACNP,UAAW,+BAEf,CACIE,KAAM,eACNG,MAAO,sCACPE,KAAM,wLACNP,UAAW,gCAEf,CACIE,KAAM,eACNG,MAAO,6BACPE,KAAM,uLACNP,UAAW,oCCFJwB,EAhBH,WAEV,OADDL,QAAQC,IAAIG,GAET,qBAAKzB,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,YAAd,SCXiB,sEDYjB,qBAAKA,UAAU,WAAf,SCXgB,+dDchB,cAAC,EAAD,CAAaiB,WAAYQ,UEVjCE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e05f1b4f.chunk.js","sourcesContent":["import Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport React, { useState }  from 'react';\nimport { Article } from '../common/articles';\n\n  \n// Props\ninterface IArticleCardProps {   \n    article: Article\n}\n\n// actor. an instance of ActorModel\nconst ArticleCard: React.FunctionComponent<IArticleCardProps> = (props) => { \n    const [isReadMore, setIsReadMore] = useState(false);\n    const toggleReadMore = () => {\n        setIsReadMore(!isReadMore);\n    };\n\n    return (                          \n        <Card className={props.article.cardClass}>    \n            <Card.Header className=\"App-card-header\">\n                <p>{props.article.date}</p>\n            </Card.Header>\n            <Card.Body className=\"App-card-body\">\n                <Card.Title>{props.article.title}</Card.Title>\n                <Card.Text className=\"App-card-text\">                    \n                    { isReadMore ? <span>{props.article.text}</span> : <span> {props.article.text.substr(0,55) + '...'}</span> }                \n                </Card.Text>            \n            </Card.Body>   \n            <Card.Footer>\n                <Button className=\"btn-read-more\" onClick={toggleReadMore}>{ !isReadMore ? 'READ MORE' : 'READ LESS' } </Button>\n            </Card.Footer>                     \n        </Card>\n    );    \n};\n\nexport default ArticleCard;\n","import ArticleCard from './ArticleCard';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport React, { Component } from 'react';\n  \n// Props\ninterface IArticleDeckProps {\n    dataSource: { date: string; title: string; text: string; cardClass: string; }[]\n}\n\n// actor. an instance of ActorModel\nexport default class ArticleDeck extends Component<IArticleDeckProps> {  \n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    render() {      \n        const dataSource = this.props.dataSource; \n        const articleCards = dataSource.map((item, i) =>           \n            <ArticleCard key={i} article={item} />\n        ); \n        console.log(articleCards);\n        return (\n            <div>\n                <CardDeck className=\"App-card-deck\">\n                    {articleCards}                    \n                </CardDeck>\n            </div>\n        );\n    }\n}\n","export interface Article {\n    date: string;\n    title: string;\n    text: string;    \n    cardClass: string;\n}\n\nexport const articles = [\n    {\n        date: '12 Sep, 2018',\n        title: 'Love of learning, art keys to a great year of Gwen',\n        text: 'To make your document look professionally produced, Word provides header, footer, cover page, and text box designs',\n        cardClass: 'App-card App-card-bg-orange'\n    },\n    {\n        date: '28 Sep, 2018',\n        title: 'Curious mind leads the way for Jill',\n        text: 'Themes and styles also help keep your document coordinated. When you click Design and choose a new Theme, the pictures, charts, and SmartArt graphics change to match your new theme.',\n        cardClass: 'App-card App-card-bg-skyblue'\n    },\n    {\n        date: '12 Sep, 2018',\n        title: 'Celebrating our volunteers',\n        text: 'Save time in Word with new buttons that show up where you need them. To change the way a picture fits in your document, click it and a button for layout options appears next to it.',\n        cardClass: 'App-card App-card-bg-paleviolet'\n    }\n];\n","import React from 'react';\nimport './App.css';\nimport ArticleDeck from './components/ArticleDeck';\nimport * as Constants from './common/Constants';\nimport { articles } from './common/articles';\n\nconst App = (): JSX.Element => {\n console.log(articles);\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">        \n        <h1 className=\"App-title\">{Constants.mainTitle}</h1>\n        <div className=\"App-text\">\n            {Constants.mainText}\n        </div>      \n        <ArticleDeck dataSource={articles} ></ArticleDeck>  \n      </div>\n        \n    </div>\n  );\n}\n\nexport default App;\n","export const mainTitle = \"Related Articles (Added deployment workflow using Github Actions)\";\nexport const mainText = \"Video provides a powerful way to help you prove your point. When you click Online Video, you can paste in the embed code for the video you want to add. You can also type a keyword to search online for the video that best fits your document. Reading is easier, too, in the new Reading view. You can collapse parts of the document and focus on the text you want. If you need to stop reading before you reach the end, Word remembers where you left off - even on another device.\";\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}